#!/bin/bash
#
# Build a development environment that feels like $HOME.
#

T=$(mktemp -d)
trap "rm -rf $T" EXIT

if [ `uname -p` = 'arm' ]
then
  APT_URL="http://ports.ubuntu.com/ubuntu-ports/"
else
  APT_URL="http://archive.ubuntu.com/ubuntu/"
fi

cat >$T/apt_sources <<...
deb     $APT_URL jammy           main restricted universe multiverse
deb-src $APT_URL jammy           main restricted universe multiverse
deb     $APT_URL jammy-updates   main restricted universe multiverse
deb-src $APT_URL jammy-updates   main restricted universe multiverse
deb     $APT_URL jammy-backports main restricted universe multiverse
deb-src $APT_URL jammy-backports main restricted universe multiverse
deb     $APT_URL jammy-security  main restricted universe multiverse
deb-src $APT_URL jammy-security  main restricted universe multiverse
...

cat >$T/apt_conf <<...
Binary::apt::APT::Cache::Search::Version "1";
...

cat >$T/debian_packages <<...
apt-file
bash-completion
btop
curl
dnsutils
exuberant-ctags
ffmpeg
firefox
fish
fzf
git
git-lfs
iproute2
iputils-ping
jp2a
locales
mutt
ncdu
python3-pip
ripgrep
silversearcher-ag
strace
sudo
tcpdump
tmux
ubuntu-standard
vim-gtk  # Terminal vim with lua support
w3m
wajig
wget
xz-utils
...

cat >$T/python_packages <<...
ansicolors
black
git-python
isort
mdformat
mypy
pycodestyle
pylint
pytest
python-gitlab
python-lsp-server   # Newer than python-language-server
...

cat >$T/locale.gen <<...
en_US.UTF-8 UTF-8
en_GB.UTF-8 UTF-8
...

cat >$T/setup_user <<...
adduser \
  --gecos '' \
  --disabled-password \
  --uid $UID \
  --home $HOME \
  --no-create-home \
  $USER

echo "$USER ALL=(ALL:ALL) NOPASSWD:ALL" >/etc/sudoers.d/$USER
...

cat >$T/init <<...
export TERM=$TERM

base64 -d <hi | zcat | jp2a --colors --color-depth=24 -

cd "$PWD"
sudo \
  --preserve-env \
  --set-home \
  --user $USER \
  -- \
  $SHELL -i
...

cat >$T/hi <<'...'
H4sICApjG2IAA3kuanBnAPt/4/8DBgEvN083BkZGBgZGIGT4f5vBmeE/pQBoCCPFhhxgEORgqGC4
xswoyMAkyMgsyPj/CIM40KkgxyIBRiZmoIS8AEickYUZIckoqGjoGFjIJJQ4EahADEMjUCdIXBBT
XPD/LQYeoElMgsyCDPYMZ9xWe51AVTKDjbGhgYuha2PQigawAPvxtWwHgDQzwwk2h+S9DAwODCxu
DWu1FcCy3OpRXFxgFrPsCyCpoGTCDDWSOUAEYqTE5zdAUkBQijFpaSBYhG2BBkTK8PkNEHXKhOmo
1yKwCG8D5+T7G4yYGjgn8DQsYAYbpHGBwWRNA1Q2j5HRgWUPo+UfVgaJBVBZnZBVQOc0ZKh94lvA
AHUNyM1sgksZGEJTGIQdLRfs4OJrgMpNffRCZxfQ1cwclw7oMPCGrDzRPYWHlUFEGug5388a8vn1
ByLrDUQYGLtPGFosALqQZ7G3gvCB1hlSZ0JyREUcDUtcnY/vABsHxBoGPDfviDE1MBj1mnUcfbWq
9JXigktcGhxMiyq+i8pCrHQISGBIK3RcwMAyZ2nYhHRRE16FVV2MqzoXMJ27dxVoLQMLKzB2GtLu
M2wKCDA0iTHxbFrFs0pBY8GCDq2OhjtzRUVEBMARaHdBYrvjSgMpFgdXUzfGEgYf1gcgCVlRhgCQ
PAtb3QbOjwcygEz5/zcBGJnaWggDAAA=
...

cat >$T/Dockerfile <<...
FROM ubuntu:jammy

COPY apt_sources /etc/apt/sources.list
RUN apt update # seed 2022-03-10 10:00

COPY debian_packages .
RUN env DEBIAN_FRONTEND=noninteractive xargs apt install --yes <debian_packages

RUN apt-file update

COPY python_packages .
RUN pip3 install -r python_packages

COPY locale.gen /etc/locale.gen
RUN locale-gen

COPY apt_conf /etc/apt/apt.conf.d/99_one_line_search_results.conf

COPY setup_user .
RUN bash setup_user

COPY hi .
COPY init .
CMD bash init
...

mount_options() {
  for path in "$HOME" "$SSH_AUTH_SOCK" "/tmp/.X11-unix"
  do
    if [ -e "$path" ]
    then
      echo --mount "type=bind,source=$path,target=$path"
    fi
  done
}

set -e

docker build --tag lets-get-creative $T

docker run \
  --tty \
  --interactive \
  --rm \
  $(mount_options) \
  --env DISPLAY=$DISPLAY \
  --env SSH_AUTH_SOCK=$SSH_AUTH_SOCK \
  lets-get-creative
