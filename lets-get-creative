#!/bin/bash
#
# Build a development environment that feels like $HOME.
#

normalize_list() { sed -e 's/ *#.*//' | sort | uniq; }

T=$(mktemp -d)
trap "rm -rf $T" EXIT

normalize_list >$T/apt_sources <<'...'
# Arm on M1
deb     [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy           main restricted universe multiverse
deb-src [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy           main restricted universe multiverse
deb     [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates   main restricted universe multiverse
deb-src [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates   main restricted universe multiverse
deb     [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
deb-src [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
deb     [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-security  main restricted universe multiverse
deb-src [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-security  main restricted universe multiverse

# Everything else
deb     [arch-=arm64] http://archive.ubuntu.com/ubuntu/    jammy           main restricted universe multiverse
deb-src [arch-=arm64] http://archive.ubuntu.com/ubuntu/    jammy           main restricted universe multiverse
deb     [arch-=arm64] http://archive.ubuntu.com/ubuntu/    jammy-updates   main restricted universe multiverse
deb-src [arch-=arm64] http://archive.ubuntu.com/ubuntu/    jammy-updates   main restricted universe multiverse
deb     [arch-=arm64] http://archive.ubuntu.com/ubuntu/    jammy-backports main restricted universe multiverse
deb-src [arch-=arm64] http://archive.ubuntu.com/ubuntu/    jammy-backports main restricted universe multiverse
deb     [arch-=arm64] http://archive.ubuntu.com/ubuntu/    jammy-security  main restricted universe multiverse
deb-src [arch-=arm64] http://archive.ubuntu.com/ubuntu/    jammy-security  main restricted universe multiverse
...

cat >$T/apt_conf <<...
Binary::apt::APT::Cache::Search::Version "1";
...

normalize_list >$T/debian_packages <<...
apt-file
bash-completion
btop
curl
dnsutils
docker.io
exuberant-ctags
ffmpeg
firefox
fish
fzf
git
git-lfs
iproute2
iputils-ping
jp2a
locales
mutt
ncdu
python3-pip
ripgrep
silversearcher-ag
strace
sudo
tcpdump
tmux
ubuntu-standard
vim-gtk  # Terminal vim with lua support
w3m
wajig
wget
xz-utils
...

normalize_list >$T/python_packages <<...
ansicolors
black
git-python
isort
mdformat
mypy
pycodestyle
pylint
pytest
python-gitlab
python-lsp-server   # Newer than python-language-server
...

cat >$T/locale.gen <<...
en_US.UTF-8 UTF-8
en_GB.UTF-8 UTF-8
...

cat >$T/setup_user <<'...'
adduser \
  --gecos '' \
  --disabled-password \
  --uid $IMAGE_UID \
  --home $IMAGE_HOME \
  --no-create-home \
  $IMAGE_USER

for gid in $IMAGE_GROUP_IDS
do
  addgroup --gid $gid creative_group_$gid
  usermod --append --groups creative_group_$gid $IMAGE_USER
done

echo "$IMAGE_USER ALL=(ALL:ALL) NOPASSWD:ALL" >/etc/sudoers.d/$IMAGE_USER
...

cat >$T/init <<'...'
export TERM=$RUNTIME_TERM

base64 -d <hi | zcat | jp2a --colors --color-depth=24 -

cd "$RUNTIME_DIRECTORY"
sudo \
  --preserve-env \
  --set-home \
  --user $RUNTIME_USER \
  -- \
  $RUNTIME_SHELL -i
...

cat >$T/hi <<'...'
H4sICApjG2IAA3kuanBnAPt/4/8DBgEvN083BkZGBgZGIGT4f5vBmeE/pQBoCCPFhhxgEORgqGC4
xswoyMAkyMgsyPj/CIM40KkgxyIBRiZmoIS8AEickYUZIckoqGjoGFjIJJQ4EahADEMjUCdIXBBT
XPD/LQYeoElMgsyCDPYMZ9xWe51AVTKDjbGhgYuha2PQigawAPvxtWwHgDQzwwk2h+S9DAwODCxu
DWu1FcCy3OpRXFxgFrPsCyCpoGTCDDWSOUAEYqTE5zdAUkBQijFpaSBYhG2BBkTK8PkNEHXKhOmo
1yKwCG8D5+T7G4yYGjgn8DQsYAYbpHGBwWRNA1Q2j5HRgWUPo+UfVgaJBVBZnZBVQOc0ZKh94lvA
AHUNyM1sgksZGEJTGIQdLRfs4OJrgMpNffRCZxfQ1cwclw7oMPCGrDzRPYWHlUFEGug5388a8vn1
ByLrDUQYGLtPGFosALqQZ7G3gvCB1hlSZ0JyREUcDUtcnY/vABsHxBoGPDfviDE1MBj1mnUcfbWq
9JXigktcGhxMiyq+i8pCrHQISGBIK3RcwMAyZ2nYhHRRE16FVV2MqzoXMJ27dxVoLQMLKzB2GtLu
M2wKCDA0iTHxbFrFs0pBY8GCDq2OhjtzRUVEBMARaHdBYrvjSgMpFgdXUzfGEgYf1gcgCVlRhgCQ
PAtb3QbOjwcygEz5/zcBGJnaWggDAAA=
...

cat >$T/Dockerfile <<'...'
FROM ubuntu:jammy

ARG IMAGE_USER
ARG IMAGE_HOME
ARG IMAGE_UID
ARG IMAGE_GROUP_IDS

COPY apt_sources /etc/apt/sources.list
COPY debian_packages .
RUN apt update && \
  env DEBIAN_FRONTEND=noninteractive xargs \
  apt install --yes <debian_packages

RUN apt-file update

COPY python_packages .
RUN pip3 install -r python_packages

COPY locale.gen /etc/locale.gen
RUN locale-gen

COPY apt_conf /etc/apt/apt.conf.d/99_one_line_search_results.conf

COPY setup_user .
RUN bash setup_user

COPY hi .
COPY init .
CMD sleep 9e9
...

mount_options() {
  for path in "$HOME" "$SSH_AUTH_SOCK" "/tmp/.X11-unix" "/var/run/docker.sock"
  do
    if [ -e "$path" ]
    then
      echo --mount "type=bind,source=$path,target=$path"
    fi
  done
}

set -e

docker build \
  --build-arg IMAGE_USER=$USER \
  --build-arg IMAGE_HOME=$HOME \
  --build-arg IMAGE_UID=$UID \
  --build-arg IMAGE_GROUP_IDS="$(id -G)" \
  --tag lets-get-creative \
  $T

if ! docker container inspect lets-get-creative 2>/dev/null
then
  docker run \
    --name lets-get-creative \
    --detach \
    --rm \
    $(mount_options) \
    lets-get-creative
fi

docker exec \
  --tty \
  --interactive \
  --env DISPLAY=$DISPLAY \
  --env SSH_AUTH_SOCK=$SSH_AUTH_SOCK \
  --env RUNTIME_TERM=$TERM \
  --env RUNTIME_DIRECTORY=$PWD \
  --env RUNTIME_USER=$USER \
  --env RUNTIME_SHELL=$SHELL \
  lets-get-creative sh init
